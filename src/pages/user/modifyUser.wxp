<template>
  <view class="space1"></view>
  <wxc-toast
          icon="{{ $toast.icon }}"
          icon-color="{{ $toast.color }}"
          is-show="{{$toast.show}}"
          text="{{ $toast.text }}"
  ></wxc-toast>
  <view class="space"></view>
  <view class="input-wrap1">
    <wxc-input bind:input="changePhoneInput" mode="normal" placeholder="输入您要更换的手机号码"
               right="{{true}}" title="更换帐号"
               type="number" value="{{changePhone}}"></wxc-input>
  </view>


  <wxc-cc>
    <view class="input-wrap">
      <wxc-input bind:input="verificationCodeInput" class="verification" mode="normal"
                 placeholder="请输入验证码"
                 type="number" value="{{verificationCode}}"></wxc-input>
    </view>
    <view class="input-wrap1">
      <button bindtap="sendVerificationCode" class="sendButton"
              disabled="{{ isSending }}"
              type="primary">{{ buttonText }}
      </button>
    </view>
  </wxc-cc>

  <view class="input-wrap1">
    <wxc-input bind:input="pastPasswordInput" mode="normal" password="true"
               placeholder="输入该账户的原登录密码" right="{{true}}"
               title="密码" type="number" value="{{pastPassword}}"></wxc-input>
  </view>

  <view class="forget-space"></view>
  <view class="forget-space"></view>
  <wxc-cc>
    <wxc-button bind:click="changeCount"
                btnStyle="width: 500rpx;border-radius: 26rpx;color: #ffffff;background-color: #1aad19;"
                size="normal"
                type="selection" value="确认修改账户"></wxc-button>
  </wxc-cc>
  <view class="space"></view>

  <view class="space"></view>
  <wxc-cc>
    <text bindtap="logout" style="color: #888888;">退出账号</text>
  </wxc-cc>
</template>

<script>
  const appInstance = getApp();
  export default {
    data: {
      $toast: {
        text: '',
        show: false,
        color: '',
        icon: ''
      },
      changePhone: '',
      verificationCode: '',
      pastPassword: '',
      isSending: false,
      buttonText: '发送验证码',
    },
    changePhoneInput(e) {
      this.setData({
        changePhone: e.detail.value
      });
    },
    verificationCodeInput(e) {
      this.setData({
        verificationCode: e.detail.value
      });
    },
    pastPasswordInput(e) {
      this.setData({
        pastPassword: e.detail.value
      });
    },
    sendVerificationCode() {
      // zuoyu.top
      if (this.data.changePhone.length < 11){
        this.showToast('请输入正确的手机号', '#a2675a', 'warning');
        return
      }
      wx.request({
        url: 'http://zuoyu.top:8080/delivery/user/sendVerificationCode/modify/'
                + this.data.changePhone,
        method: 'GET',
        header: {
          'Cookie': appInstance.globalData.authenticatedCode
        },
        success: res => {
          if (res.statusCode === 200) {
            this.showToast(res.data.message, '#5ac777', 'yes');
            return
          }
          this.showToast(res.data.message, '#c70009', 'no');
        },
        fail: error => {
          this.showToast('请求失败，可能是网络原因', '#a2675a', 'warning');
        }
      });
      const _this = this;
      _this.setData({
        isSending: true
      });
      let time = 60;
      const timer = setInterval(() => {
        _this.setData({
          buttonText: time + '\ts'
        });
        time--;
        if (time < 0) {
          _this.setData({
            buttonText: '发送验证码',
            isSending: false
          });
          clearInterval(timer)
        }
      }, 1000)
    },
    changeCount() {
      wx.request({
        url: 'http://zuoyu.top:8080/delivery/user/modifyUser',
        method: 'POST',
        data: {
          newUserPhone: this.data.changePhone,
          verifyCode: this.data.verificationCode,
          passWord: this.data.pastPassword
        },
        header: {
          'content-type': 'application/x-www-form-urlencoded',
          'Cookie': appInstance.globalData.authenticatedCode
        },
        success: res => {
          if (res.statusCode === 200) {
            this.showToast('帐号修改成功', '#5ac777', 'yes');
            setTimeout(() => {
              this.logout()
            }, 1000);
            return
          }
          this.showToast(res.data.message, '#c70009', 'no');
        },
        fail: error => {
          this.showToast('请求失败，可能是网络原因', '#a2675a', 'warning');
        },
        complete: () => {
        }
      });
    },
    showToast(text, color, icon) {
      this.setData({
        $toast: {
          text: text,
          color: color,
          icon: icon,
          show: true
        }
      });
      setTimeout(() => {
        this.setData({
          $toast: {
            show: false
          },
          contentCount: 0,
          content: ''
        })
      }, 1500)
    },
    logout() {
      wx.request({
        url: 'http://zuoyu.top:8080/delivery/logout',
        method: 'GET',
        header: {
          'Cookie': appInstance.globalData.authenticatedCode
        },
        success: res => {
          wx.clearStorage({
            success: res => {
              this.showToast('注销成功，正在跳转...', '#5ac777', 'yes');
              appInstance.globalData.authenticatedCode = '';
              appInstance.globalData.user = {};
              setTimeout(() => {
                wx.reLaunch({
                  url: '../home/me'
                })
              }, 1000);
            },
            fail: error => {
              this.showToast('小程序出错，请联系管理员', '#c70009', 'no');
            }
          })
        },
        fail: error => {
          this.showToast('请求失败，可能是网络原因', '#a2675a', 'warning');
        }
      });
    },
    onLoad: function (options) {
      // 页面创建时执行

    },
    onShow: function () {
      // 页面出现在前台时执行
    },
    onReady: function () {
      // 页面首次渲染完毕时执行
    },
    onHide: function () {
      // 页面从前台变为后台时执行
    },
    onUnload: function () {
      // 页面销毁时执行
    },
    onPullDownRefresh: function () {
      // 触发下拉刷新时执行
    },
    onReachBottom: function () {
      // 页面触底时执行
    },
    onShareAppMessage: function () {
      // 页面被用户分享时执行
    },
    onPageScroll: function () {
      // 页面滚动时执行
    },
    onResize: function () {
      // 页面尺寸变化时执行
    },
    onTabItemTap(item) {
      // tab 点击时执行
      console.log(item.index);
      console.log(item.pagePath);
      console.log(item.text)
    },
    config: {
      // 导航栏标题文字内容
      navigationBarTitleText: '账户修改',
      // 是否开启当前页面下拉刷新。
      enablePullDownRefresh: false,
      // 设置为 true 则页面整体不能上下滚动。
      disableScroll: false,
      // 禁止页面右滑手势返回
      disableSwipeBack: false,
      usingComponents: {
        'wxc-input': '@minui/wxc-input',
        'wxc-cc': '@minui/wxc-cc',
        'wxc-button': '@minui/wxc-button',
        'wxc-loadmore': '@minui/wxc-loadmore',
        'wxc-toast': '@minui/wxc-toast'
      }
    }
  }
</script>

<style lang="less">
  .space {
    height: ~'100rpx';
  }
  .space1 {
    height: ~'100rpx';
  }
  .input-wrap1 {
    position: relative;
    margin: ~'20rpx' ~'10rpx' 0 ~'10rpx';
  }
  .input-wrap {
    position: relative;
    margin: ~'20rpx' 0 0 ~'10rpx';
    width: 100%;
  }

  .forget-space {
    height: ~'30rpx';
  }

  .sendButton {
    font-size: ~'28rpx';
    width: ~'260rpx';
    color: #ffffff;
    height: ~'75rpx';
    line-height: ~'75rpx';
    border-radius: ~'10rpx';
  }
</style>
