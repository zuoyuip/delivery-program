<template>
  <view class="space1"></view>
  <wxc-toast
      icon="{{ $toast.icon }}"
      icon-color="{{ $toast.color }}"
      is-show="{{$toast.show}}"
      text="{{ $toast.text }}">
      </wxc-toast>
  <view class="space"></view>
  <view class="input-wrap">
    <wxc-input bind:input="userPhoneInput" mode="wrapped" placeholder="输入您的手机号码" right="{{true}}"
               title="帐号"
               type="number" value="{{userPhone}}"></wxc-input>
  </view>

  <view class="input-wrap">
    <wxc-input bind:input="repeatPasswordInput" mode="wrapped" password="true"
               placeholder="输入您要设定的密码" right="{{true}}"
               title="密码" type="number" value="{{repeatPassword}}"></wxc-input>
  </view>

  <view class="input-wrap">
    <wxc-input bind:input="againPasswordInput" mode="wrapped" password="true"
               placeholder="再次输入您要设定的密码" right="{{true}}"
               title="重复密码" type="number" value="{{againPassword}}"></wxc-input>
  </view>
  <wxc-cc>
    <view class="input-wrap1">
      <wxc-input bind:input="verificationCodeInput" class="verification" mode="wrapped"
                 placeholder="请输入验证码" type="number" value="{{verificationCode}}"></wxc-input>
    </view>
    <view class="input-wrap">
      <button bindtap="sendVerificationCode" class="sendButton"
              disabled="{{ isSending }}"
              type="primary">{{ buttonText }}
      </button>

    </view>
  </wxc-cc>
  <view class="forget-space"></view>
  <view class="agree">
    <radio-group bindchange="agreement">
      <checkbox class="agree-text" value="receive"></checkbox>
      <text style="font-size: 10px;color: #888888" bindtap="toUserAgreement">我已阅读并同意<text style="font-size: 10px;color: #fd8000" >《用户协议》</text></text>
        <text style="font-size: 10px;color: #888888">和</text>
        <text style="font-size: 10px;color: #fd8000" bindtap="toPrivacyPolicy">《隐私政策》</text>
    </radio-group>
  </view>
  <view class="forget-space"></view>
  <wxc-cc>
    <button bindtap="register" class="sure_button"
            type="{{ 'primary' }}"
            disabled="{{ isReceive }}"> 注册
    </button>
  </wxc-cc>
</template>

<script>
  const appInstance = getApp();
  export default {
    data: {
      isClicked: false,
      userPhone: '',
      verificationCode: '',
      repeatPassword: '',
      againPassword: '',
      isSending: false,
      buttonText: '发送验证码',
      $toast: {
        text: '',
        show: false,
        color: '',
        icon: ''
      },
      isReceive:'true'
    },
    showToast(text, color, icon) {
      this.setData({
        $toast: {
          text: text,
          color: color,
          icon: icon,
          show: true
        }
      });
      setTimeout(() => {
        this.setData({
          $toast: {
            show: false
          },
          contentCount: 0,
          content: ''
        })
      }, 1000)
    },
    userPhoneInput(e) {
      this.setData({
        userPhone: e.detail.value
      });
    },
    verificationCodeInput(e) {
      this.setData({
        verificationCode: e.detail.value
      });
    },
    repeatPasswordInput(e) {
      this.setData({
        repeatPassword: e.detail.value
      });
    },
    againPasswordInput(e) {
      this.setData({
        againPassword: e.detail.value
      });
    },
    sendVerificationCode() {
      if (this.data.userPhone.length < 11){
        this.showToast('请输入正确的手机号', '#a2675a', 'warning');
        return
      }
      wx.request({
        url: 'https://www.tkparcel.com/delivery/user/sendVerificationCode/register/'
            + this.data.userPhone,
        method: 'GET',
        success: res => {
          if (res.statusCode === 200) {
            this.showToast(res.data.message, '#5ac777', 'yes');
            return
          }
          this.showToast(res.data.message, '#c70009', 'no');
        },
        fail: error => {
          this.showToast('请求失败，可能是网络原因', '#a2675a', 'warning');
        },
        complete: result => {
        }
      });
      const _this = this;
      _this.setData({
        isSending: true
      });
      let time = 60;
      const timer = setInterval(() => {
        _this.setData({
          buttonText: time + '\ts'
        });
        time--;
        if (time < 0) {
          _this.setData({
            buttonText: '发送验证码',
            isSending: false
          });
          clearInterval(timer)
        }
      }, 1000)
    },
    register() {
      if (this.data.repeatPassword.trim() !== this.data.againPassword.trim()) {
        this.showToast('密码设置不一致', '#c70009', 'no');
        return
      }
      if (this.data.isClicked) {
        return;
      }
      this.setData({
        isClicked: true
      });
      wx.request({
        url: 'https://www.tkparcel.com/delivery/user',
        method: 'POST',
        data: {
          userPhone: this.data.userPhone,
          userPassword: this.data.repeatPassword,
          verifyCode: this.data.verificationCode
        },
        header: {
          'content-type': 'application/x-www-form-urlencoded',
        },
        success: res => {
          if (res.statusCode === 200) {
            this.showToast('注册成功，正在跳转...', '#5ac777', 'yes');
            setTimeout(() => {
              wx.reLaunch({
                url: '../user/login'
              });
            }, 1000);
            return
          }
          this.showToast(res.data.message, '#c70009', 'no');
        },
        fail: error => {
          this.showToast('请求失败，可能是网络原因', '#a2675a', 'warning');
        },
        complete: result => {
          this.setData({
            isClicked: false
          })
        }
      });
    },
    agreement(e) {
      this.setData({
        isReceive: e.detail.value !== 'receive'
      })
    },
    toUserAgreement() {
      wx.navigateTo({
        url: '../user/userAgreement'
      })
    },
      toPrivacyPolicy() {
          wx.navigateTo({
              url: '../user/privacyPolicy'
          })
      },
    onLoad: function (options) {
      // 页面创建时执行

    },
    onShow: function () {
      // 页面出现在前台时执行
    },
    onReady: function () {
      // 页面首次渲染完毕时执行
    },
    onHide: function () {
      // 页面从前台变为后台时执行
    },
    onUnload: function () {
      // 页面销毁时执行
    },
    onPullDownRefresh: function () {
      // 触发下拉刷新时执行
    },
    onReachBottom: function () {
      // 页面触底时执行
    },
    onShareAppMessage: function () {
      // 页面被用户分享时执行
    },
    onPageScroll: function () {
      // 页面滚动时执行
    },
    onResize: function () {
      // 页面尺寸变化时执行
    },
    onTabItemTap(item) {
      // tab 点击时执行
      console.log(item.index);
      console.log(item.pagePath);
      console.log(item.text)
    },
    config: {
      // 导航栏标题文字内容
      navigationBarTitleText: '注册',
      // 是否开启当前页面下拉刷新。
      enablePullDownRefresh: false,
      // 设置为 true 则页面整体不能上下滚动。
      disableScroll: false,
      // 禁止页面右滑手势返回
      disableSwipeBack: false,
      usingComponents: {
        'wxc-input': '@minui/wxc-input',
        'wxc-cc': '@minui/wxc-cc',
        'wxc-button': '@minui/wxc-button',
        'wxc-toast': '@minui/wxc-toast'
      }
    }
  }
</script>

<style lang="less">
  .space {
    height: ~'200rpx';
  }
  .space1 {
    height: ~'50rpx';
  }

  .input-wrap {
    position: relative;
    margin: ~'20rpx' ~'10rpx' 0 ~'10rpx';
  }
  .input-wrap1 {
    position: relative;
    margin: ~'20rpx' 0 0 ~'10rpx';
    width: 90%;
  }

  .forget-space {
    height: ~'30rpx';
  }

  .sendButton {
    font-size: ~'28rpx';
    width: ~'260rpx';
    color: #ffffff;
    height: ~'75rpx';
    line-height: ~'75rpx';
    border-radius: ~'10rpx';
  }
  .sure_button {
    border-radius: ~'26rpx';
    width: ~'500rpx';
    height: ~'60rpx';
    font-size: ~'30rpx';
    line-height: ~'60rpx';
    margin-left: 17%;
  }
  .radio {
    font-size: ~'32rpx';
    color: #888888;
    /*margin-left: ~'180rpx';*/
    text-align: center;
  }
  .female {
    /*margin-left: ~'80rpx';*/
    text-align: center;
  }
  .agree{
    text-align: center;
  }
  .agree-text{
    transform: scale(0.6,0.6);
  }

</style>
