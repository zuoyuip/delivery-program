<template xmlns:wx="urn:oasis:names:tc:entity:xmlns:xml:catalog">
  <wxc-toast
      icon="{{ $toast.icon }}"
      icon-color="{{ $toast.color }}"
      is-show="{{$toast.show}}"
      text="{{ $toast.text }}"
  ></wxc-toast>
  <view class="space"></view>
  <view wx:if="{{ userIsRefuse }}">
    <wxc-cc>
      <text class="time">审核未通过，审核日期：{{ review.reviewDate }}</text>
    </wxc-cc>
    <wxc-panel margin="{{false}}" title="未通过原因：">
      <view class="content">{{ review.reviewMessage }}。请按照要求重新填写您的信息
      </view>
    </wxc-panel>
    <view class="space"></view>
  </view>

  <view class="input-wrap">
    <wxc-input bind:input="userInfoNameInput" placeholder="请输入真实姓名" right="{{true}}" title="姓名"
               type="text" value="{{ userInfoName }}"></wxc-input>

    <view class="radio-space"></view>

    <radio-group bindchange="checkboxChange">
      <label class="radio">
        <radio checked="{{ isMan }}" value="男">男</radio>
        <radio checked="{{ !isMan }}" class="female" value="女">女</radio>
      </label>
    </radio-group>

    <view class="radio-space"></view>

    <wxc-panel border="{{ false }}" class="panel">
      <wxc-cc>
        <text class="title-style">学院</text>
        <picker bindchange="userCollegePickerChange" range="{{ userCollegeList }}"
                value="{{ userCollegeIndex }}">
          <view class="picker-message">
            {{ userCollegeList[userCollegeIndex] }}
          </view>
        </picker>
      </wxc-cc>
    </wxc-panel>
    <wxc-input bind:input="userInfoSubjectInput" placeholder="请输入所学专业" right="{{true}}" title="专业"
               type="text" value="{{ userInfoSubject }}"></wxc-input>
    <wxc-input bind:input="userInfoStudentNumberInput" placeholder="请输入你的学号" right="{{true}}"
               title="学号" type="number"
               value="{{ userInfoStudentNumber }}"></wxc-input>
    <wxc-input bind:input="userInfoClassInput" placeholder="请输入你的班级" right="{{true}}"
               title="班级" type="text"
               value="{{ userInfoClass }}"></wxc-input>
  </view>

  <view class="space"></view>

  <wxc-panel title="请上传您的校园卡正面照：">
    <wxc-cc>
      <view wx:if="{{ image === ''}}">
        <image bindtap="chooseImage" class="addStyle" src="../../images/add.png"></image>
      </view>
      <view wx:else>
        <image bindtap="handleImagePreview" mode="aspectFit" src="{{ image }}"></image>
        <view style="height: 1px;"></view>
        <wxc-button bind:click="removeImage" class="btn-style" size="normal" type="danger"
                    value="删除"></wxc-button>
      </view>
    </wxc-cc>
  </wxc-panel>

  <view class="space"></view>
  <wxc-cc>
    <wxc-button bind:click="submitUserInfo"
                btnStyle="width: 500rpx;border-radius: 26rpx;color: #ffffff;background-color:#1aad19"
                size="normal"
                type="selection" value="提交"></wxc-button>
  </wxc-cc>


</template>

<script>
  import data from '../../common/data.json'

  const appInstance = getApp();
  export default {
    data: {
      isClicked: false,
      image: '',
      userCollegeList: data.userCollegeList,
      userCollegeIndex: 0,
      userInfoName: '',
      userInfoSex: '男',
      isMan: true,
      userInfoSubject: '',
      userInfoStudentNumber: '',
      userInfoClass:'',
      $toast: {
        text: '',
        show: false,
        color: '',
        icon: ''
      },
      userIsRefuse: false,
      review: {},
      userInfo: {}
    },
    userIsRefuse() {
      return appInstance.globalData.user.userInfoId !== null
          && appInstance.globalData.user.userIsByReview === false
          && appInstance.globalData.user.userIsSubmitReview === false
    },
    showToast(text, color, icon) {
      this.setData({
        $toast: {
          text: text,
          color: color,
          icon: icon,
          show: true
        }
      });
      setTimeout(() => {
        this.setData({
          $toast: {
            show: false
          },
        })
      }, 1000)
    },
    userCollegePickerChange(e) {
      this.setData({
        userCollegeIndex: e.detail.value,
      })
    },
    checkboxChange(e) {
      this.setData({
        userInfoSex: e.detail.value
      })
    },
    userInfoNameInput(e) {
      this.setData({
        userInfoName: e.detail.value
      })
    },
    userInfoSubjectInput(e) {
      this.setData({
        userInfoSubject: e.detail.value
      })
    },
    userInfoStudentNumberInput(e) {
      this.setData({
        userInfoStudentNumber: e.detail.value
      })
    },
    userInfoClassInput(e) {
      this.setData({
        userInfoClass: e.detail.value
      })
    },
    chooseImage(e) {
      wx.chooseImage({
        count: 1,
        sizeType: ['original', 'compressed'],  //可选择原图或压缩后的图片
        sourceType: ['album', 'camera'], //可选择性开放访问相册、相机
        success: res => {
          const image = res.tempFilePaths;
          const that = this;
          that.setData({
            image: image[0]
          });
        },
        fail: error => {

        },
        complete: () => {

        }
      })
    },
    removeImage(e) {
      const that = this;
      that.setData({
        image: ''
      });
    },
    handleImagePreview(e) {
      const image = this.data.image;
      wx.previewImage({
        urls: [image] //所有要预览的图片
      })
    },
    submitUserInfo() {
      if (this.data.image === '') {
        this.showToast('请选择上传的照片', '#c70009', 'no');
        return
      }
      if (this.data.userCollegeIndex === 0) {
        this.showToast('请选择学院', '#c70009', 'no');
        return
      }
      if (this.data.userInfoName === '') {
        this.showToast('请输入姓名', '#c70009', 'no');
        return
      }
      if (this.data.userInfoSubject === '') {
        this.showToast('请输入专业', '#c70009', 'no');
        return
      }
      if (this.data.userInfoStudentNumber === '') {
        this.showToast('请输入学号', '#c70009', 'no');
        return
      }
      if (this.data.userInfoClass === '') {
        this.showToast('请输入班级', '#c70009', 'no');
        return
      }
      this.setData({
        $toast: {
          text: '正在上传信息，请稍候',
          color: '#c6c8bd',
          icon: 'more',
          show: true
        }
      });
      if (this.data.isClicked) {
        return;
      }
      this.setData({
        isClicked: true
      });
      wx.uploadFile({
        url: 'https://www.tkparcel.com/delivery/me/submitCriteria', //仅为示例，非真实的接口地址
        filePath: this.data.image,
        name: 'file',
        formData: {
          'userInfoName': this.data.userInfoName,
          'userInfoSex': this.data.userInfoSex,
          'userInfoCollege': this.data.userCollegeList[this.data.userCollegeIndex],
          'userInfoSubject': this.data.userInfoSubject,
          'userInfoStudentNumber': this.data.userInfoStudentNumber,
          'userInfoClass': this.data.userInfoClass
        },
        header: {
          'content-type': 'application/x-www-form-urlencoded',
          'Authorization': appInstance.globalData.authorization
        },
        success: res => {
          if (res.statusCode === 200) {
            setTimeout(() => {
              this.showToast('信息上传成功', '#5ac777', 'yes');
            }, 1000);
            new Promise((resolve) => {
              wx.request({
                url: 'https://www.tkparcel.com/delivery/user/authentication',
                method: 'GET',
                header: {
                  'Authorization': appInstance.globalData.authorization
                },
                success: res => {
                  appInstance.globalData.user = res.data;
                },
                fail: error => {
                },
                complete: () => {
                }
              });
              resolve();// 在浏览器里，Promise没写resolve，'then'是不会输出的，这里为了方便演示人为添加执行
            }).then(() => {
              setTimeout(() => {
                wx.reLaunch({
                  url: '../home/me'
                })
              }, 1000);
            });
            return
          }
          this.showToast('服务器出错，请联系管理员', '#c70009', 'no');
        },
        fail: error => {
          setTimeout(() => {
            this.showToast('请求失败，可能是网络原因', '#c70009', 'no');
          }, 1000);
        },
        complete: () => {
          this.setData({
            isClicked: false,
            $toast: {
              show: false
            },
          })
        }
      });
    },
    selectReview() {
      wx.request({
        url: 'https://www.tkparcel.com/delivery/me/review/' + appInstance.globalData.user.reviewId,
        method: 'GET',
        header: {
          'Authorization': appInstance.globalData.authorization
        },
        success: res => {
          this.setData({
            review: res.data
          });
        },
        fail: error => {
          setTimeout(() => {
            this.showToast('审核内容请求失败，可能是网络原因', '#c70009', 'no');
          }, 1000);
        },
        complete: () => {
        }
      });
    },
    onLoad: function (options) {
      // 页面创建时执行
      if (this.userIsRefuse()) {
        this.selectReview();
        this.setData({
          userIsRefuse: true
        });
      }

    },
    onShow: function () {
      // 页面出现在前台时执行
    },
    onReady: function () {
      // 页面首次渲染完毕时执行
    },
    onHide: function () {
      // 页面从前台变为后台时执行
    },
    onUnload: function () {
      // 页面销毁时执行
    },
    onPullDownRefresh: function () {
      // 触发下拉刷新时执行
    },
    onReachBottom: function () {
      // 页面触底时执行
    },
    onShareAppMessage: function () {
      // 页面被用户分享时执行
    },
    onPageScroll: function () {
      // 页面滚动时执行
    },
    onResize: function () {
      // 页面尺寸变化时执行
    },
    onTabItemTap(item) {

    },
    config: {
      // 导航栏标题文字内容
      navigationBarTitleText: '身份审核',
      // 是否开启当前页面下拉刷新。
      enablePullDownRefresh: false,
      // 设置为 true 则页面整体不能上下滚动。
      disableScroll: false,
      // 禁止页面右滑手势返回
      disableSwipeBack: false,
      usingComponents: {
        'wxc-input': '@minui/wxc-input',
        'wxc-button': '@minui/wxc-button',
        'wxc-icon': '@minui/wxc-icon',
        'wxc-cc': '@minui/wxc-cc',
        'wxc-panel': '@minui/wxc-panel',
        'wxc-loadmore': '@minui/wxc-loadmore',
        'wxc-progress': '@minui/wxc-progress',
        'wxc-toast': '@minui/wxc-toast'
      }
    }
  }
</script>

<style lang="less">

  .content {
    padding: ~'30rpx';
    color: #ff0000;
    background-color: #F0F0F0;
  }

  .time {
    font-size: ~'30rpx';
    color: #454648;
  }

  .input-wrap {
    position: relative;
    margin: ~'20rpx' ~'10rpx' 0 ~'10rpx';
  }

  .panel {
    min-width: ~'163rpx';
    line-height: ~'44rpx';
    height: ~'44rpx';
    display: flex;
    align-items: center;
    padding: ~'20rpx' ~'30rpx' ~'26rpx' ~'30rpx';
    font-size: ~'28rpx';
    color: #333;
    border: 0 solid #f0f0f0;
    border-bottom-width: ~'1rpx';
  }

  .title-style {
    flex: 1;
    height: ~'44rpx';
    min-height: ~'44rpx';
    line-height: ~'44rpx';
  }

  .picker-message {
    margin-left: ~'390rpx';
    color: #959595;
    padding-bottom: ~'10rpx';
  }

  .counter-message {
    margin-left: ~'233rpx';
    color: #959595;
    padding-bottom: ~'16rpx';
  }

  .btn-style {
    margin-left: ~'220rpx';
  }

  .addStyle {
    border: #dadada dashed;
    height: ~'200rpx';
    width: ~'200rpx';
  }

  .radio-space {
    height: ~'30rpx';
  }

  .space {
    height: ~'66rpx';
  }

  .radio {
    font-size: ~'32rpx';
    color: #888888;
    margin-left: ~'180rpx';
  }

  .female {
    margin-left: ~'180rpx';
  }
</style>
