<template xmlns:wx="urn:oasis:names:tc:entity:xmlns:xml:catalog">
  <wxc-loadmore is-end="{{ false }}" wx:if="{{ isLoading }}"></wxc-loadmore>
  <view>
    <view class="table">
      <view class="tr head">
        <view class="th">快递名称</view>
        <view class="th">送达地点</view>
        <view class="th">赏金</view>
      </view>
      <view class="space"></view>
      <view wx:if="{{ expressList.length > 0 }}">
        <view class="tr" wx:for="{{ expressList }}" wx:for-item="express"
              wx:key="deliveryId">
          <view class="td">{{ express.deliveryName }}</view>
          <view class="td">{{ express.deliveryAddress }}</view>
          <view class="td">{{ express.deliveryReward }}</view>
        </view>
        <wxc-loadmore is-end="{{ true }}"></wxc-loadmore>
      </view>
      <view wx:else>
        <wxc-abnor
            bind:abnortap="onRetry"
            type="{{ requestType }}"></wxc-abnor>
      </view>
    </view>
    <view bindtap="">
      <image src="../"></image>
    </view>
  </view>
</template>

<script>
  export default {
    data: {
      expressList: [],
      requestType: '',
      isLoading: false
    },
    selectExpress() {
      const that = this;
      that.setData({
        isLoading: true
      });
      wx.request({
        url: 'http://localhost:8080/delivery/delivery',
        method: 'GET',
        success: res => {
          if (res.statusCode === 200) {
            const expressList = res.data;
            that.setData({
              expressList: expressList,
              requestType: 'ORDER'
            });
            return
          }
          that.setData({
            requestType: 'SHOP'
          })
        },
        fail: error => {
          that.setData({
            requestType: 'REQUEST_ERROR'
          })
        },
        complete: () => {
          that.setData({
            isLoading: false
          });
        }
      });
    },
    onRetry() {
      this.selectExpress()
    },
    onLoad: function (options) {
      // 页面创建时执行
      this.selectExpress()
    },
    onShow: function () {
      // 页面出现在前台时执行
    },
    onReady: function () {
      // 页面首次渲染完毕时执行
    },
    onHide: function () {
      // 页面从前台变为后台时执行
    },
    onUnload: function () {
      // 页面销毁时执行
    },
    onPullDownRefresh: function () {
      // 触发下拉刷新时执行
      this.selectExpress()
    },
    onReachBottom: function () {
      // 页面触底时执行
    },
    onShareAppMessage: function () {
      // 页面被用户分享时执行
    },
    onPageScroll: function () {
      // 页面滚动时执行
    },
    onResize: function () {
      // 页面尺寸变化时执行
    },
    onTabItemTap(item) {
      // tab 点击时执行
      console.log(item.index);
      console.log(item.pagePath);
      console.log(item.text)
    },
    config: {
      // 导航栏标题文字内容
      navigationBarTitleText: '主页',
      // 是否开启当前页面下拉刷新。
      enablePullDownRefresh: true,
      // 设置为 true 则页面整体不能上下滚动
      disableScroll: false,
      // 禁止页面右滑手势返回
      disableSwipeBack: false,
      usingComponents: {
        'wxc-loadmore': '@minui/wxc-loadmore',
        'wxc-abnor': '@minui/wxc-abnor'
      }
    }
  }
</script>

<style lang="less">
  .table {
    border: ~'1rpx' solid #dadada;
    border-right: 0;
    border-bottom: 0;
    width: 100%;
    margin-bottom: ~'6rpx';
  }

  .head {
    position: fixed;
    top: 0;
  }

  .tr {
    width: 100%;
    display: flex;
    justify-content: space-between;
  }

  .th, .td {
    height: ~'66rpx';
    line-height: ~'66rpx';
    border-bottom: ~'1rpx' solid #dadada;
    border-right: ~'1rpx' solid #dadada;
    text-align: center;
    width: 100%;
  }

  .th {
    font-weight: 500;
    background-color: #FDFDFD;
    font-size: ~'34rpx';
    color: #000000;
  }

  .td {
    font-size: ~'34rpx';
    color: #303030;
  }

  .space {
    height: ~'66rpx';
  }
</style>
